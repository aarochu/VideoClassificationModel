{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 30000 // 30 seconds timeout for video processing\n});\nexport const predictVideo = async file => {\n  const formData = new FormData();\n  formData.append('file', file);\n  try {\n    const response = await api.post('/predict', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return response.data;\n  } catch (error) {\n    if (error.response) {\n      // Server responded with error status\n      throw new Error(error.response.data.detail || 'Server error occurred');\n    } else if (error.request) {\n      // Request was made but no response received\n      throw new Error('No response from server. Please check if the backend is running.');\n    } else {\n      // Something else happened\n      throw new Error(error.message || 'An unexpected error occurred');\n    }\n  }\n};\nexport const getClasses = async () => {\n  try {\n    const response = await api.get('/classes');\n    return response.data;\n  } catch (error) {\n    if (error.response) {\n      throw new Error(error.response.data.detail || 'Failed to fetch classes');\n    } else if (error.request) {\n      throw new Error('No response from server. Please check if the backend is running.');\n    } else {\n      throw new Error(error.message || 'An unexpected error occurred');\n    }\n  }\n};\nexport const healthCheck = async () => {\n  try {\n    const response = await api.get('/health');\n    return response.data;\n  } catch (error) {\n    return {\n      status: 'unhealthy',\n      model_loaded: false\n    };\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","timeout","predictVideo","file","formData","FormData","append","response","post","headers","data","error","Error","detail","request","message","getClasses","get","healthCheck","status","model_loaded"],"sources":["/Users/aaronc/Desktop/VideoClassificationModel/src/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 30000, // 30 seconds timeout for video processing\n});\n\nexport const predictVideo = async (file) => {\n  const formData = new FormData();\n  formData.append('file', file);\n\n  try {\n    const response = await api.post('/predict', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    });\n    return response.data;\n  } catch (error) {\n    if (error.response) {\n      // Server responded with error status\n      throw new Error(error.response.data.detail || 'Server error occurred');\n    } else if (error.request) {\n      // Request was made but no response received\n      throw new Error('No response from server. Please check if the backend is running.');\n    } else {\n      // Something else happened\n      throw new Error(error.message || 'An unexpected error occurred');\n    }\n  }\n};\n\nexport const getClasses = async () => {\n  try {\n    const response = await api.get('/classes');\n    return response.data;\n  } catch (error) {\n    if (error.response) {\n      throw new Error(error.response.data.detail || 'Failed to fetch classes');\n    } else if (error.request) {\n      throw new Error('No response from server. Please check if the backend is running.');\n    } else {\n      throw new Error(error.message || 'An unexpected error occurred');\n    }\n  }\n};\n\nexport const healthCheck = async () => {\n  try {\n    const response = await api.get('/health');\n    return response.data;\n  } catch (error) {\n    return { status: 'unhealthy', model_loaded: false };\n  }\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;AAE7E,MAAMC,GAAG,GAAGL,KAAK,CAACM,MAAM,CAAC;EACvBC,OAAO,EAAEN,YAAY;EACrBO,OAAO,EAAE,KAAK,CAAE;AAClB,CAAC,CAAC;AAEF,OAAO,MAAMC,YAAY,GAAG,MAAOC,IAAI,IAAK;EAC1C,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;EAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEH,IAAI,CAAC;EAE7B,IAAI;IACF,MAAMI,QAAQ,GAAG,MAAMT,GAAG,CAACU,IAAI,CAAC,UAAU,EAAEJ,QAAQ,EAAE;MACpDK,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IACF,OAAOF,QAAQ,CAACG,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,IAAIA,KAAK,CAACJ,QAAQ,EAAE;MAClB;MACA,MAAM,IAAIK,KAAK,CAACD,KAAK,CAACJ,QAAQ,CAACG,IAAI,CAACG,MAAM,IAAI,uBAAuB,CAAC;IACxE,CAAC,MAAM,IAAIF,KAAK,CAACG,OAAO,EAAE;MACxB;MACA,MAAM,IAAIF,KAAK,CAAC,kEAAkE,CAAC;IACrF,CAAC,MAAM;MACL;MACA,MAAM,IAAIA,KAAK,CAACD,KAAK,CAACI,OAAO,IAAI,8BAA8B,CAAC;IAClE;EACF;AACF,CAAC;AAED,OAAO,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;EACpC,IAAI;IACF,MAAMT,QAAQ,GAAG,MAAMT,GAAG,CAACmB,GAAG,CAAC,UAAU,CAAC;IAC1C,OAAOV,QAAQ,CAACG,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,IAAIA,KAAK,CAACJ,QAAQ,EAAE;MAClB,MAAM,IAAIK,KAAK,CAACD,KAAK,CAACJ,QAAQ,CAACG,IAAI,CAACG,MAAM,IAAI,yBAAyB,CAAC;IAC1E,CAAC,MAAM,IAAIF,KAAK,CAACG,OAAO,EAAE;MACxB,MAAM,IAAIF,KAAK,CAAC,kEAAkE,CAAC;IACrF,CAAC,MAAM;MACL,MAAM,IAAIA,KAAK,CAACD,KAAK,CAACI,OAAO,IAAI,8BAA8B,CAAC;IAClE;EACF;AACF,CAAC;AAED,OAAO,MAAMG,WAAW,GAAG,MAAAA,CAAA,KAAY;EACrC,IAAI;IACF,MAAMX,QAAQ,GAAG,MAAMT,GAAG,CAACmB,GAAG,CAAC,SAAS,CAAC;IACzC,OAAOV,QAAQ,CAACG,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,OAAO;MAAEQ,MAAM,EAAE,WAAW;MAAEC,YAAY,EAAE;IAAM,CAAC;EACrD;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}