{"ast":null,"code":"var _jsxFileName = \"/Users/aaronc/Desktop/VideoClassificationModel/src/frontend/src/components/LivePrediction.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useCallback, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LiveContainer = styled.div`\n  background: #f8f9fa;\n  border-radius: 12px;\n  padding: 30px;\n  text-align: center;\n`;\n_c = LiveContainer;\nconst VideoContainer = styled.div`\n  position: relative;\n  max-width: 800px;\n  margin: 0 auto 20px;\n  border-radius: 12px;\n  overflow: hidden;\n  box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);\n  background: #000;\n`;\n_c2 = VideoContainer;\nconst Video = styled.video`\n  width: 100%;\n  height: auto;\n  display: block;\n`;\n_c3 = Video;\nconst Canvas = styled.canvas`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  pointer-events: none;\n`;\n_c4 = Canvas;\nconst Controls = styled.div`\n  display: flex;\n  gap: 15px;\n  justify-content: center;\n  flex-wrap: wrap;\n  margin-bottom: 20px;\n`;\n_c5 = Controls;\nconst Button = styled.button`\n  padding: 12px 24px;\n  border: none;\n  border-radius: 8px;\n  font-size: 16px;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  min-width: 120px;\n\n  &:disabled {\n    opacity: 0.6;\n    cursor: not-allowed;\n  }\n`;\n_c6 = Button;\nconst StartButton = styled(Button)`\n  background: ${props => props.$isActive ? '#dc3545' : '#28a745'};\n  color: white;\n\n  &:hover:not(:disabled) {\n    transform: translateY(-2px);\n    box-shadow: 0 8px 20px rgba(0, 0, 0, 0.2);\n  }\n`;\n_c7 = StartButton;\nconst Status = styled.div`\n  font-size: 16px;\n  font-weight: 500;\n  color: ${props => props.$isActive ? '#dc3545' : '#28a745'};\n  margin-bottom: 15px;\n`;\n_c8 = Status;\nconst PredictionDisplay = styled.div`\n  background: white;\n  border-radius: 8px;\n  padding: 20px;\n  margin-top: 20px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n  text-align: left;\n`;\n_c9 = PredictionDisplay;\nconst PredictionItem = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 10px 0;\n  border-bottom: 1px solid #e9ecef;\n\n  &:last-child {\n    border-bottom: none;\n  }\n`;\n_c0 = PredictionItem;\nconst PersonName = styled.span`\n  font-weight: 600;\n  color: #333;\n  font-size: 18px;\n`;\n_c1 = PersonName;\nconst Confidence = styled.span`\n  color: #667eea;\n  font-weight: 600;\n`;\n_c10 = Confidence;\nconst ErrorMessage = styled.div`\n  background: #f8d7da;\n  color: #721c24;\n  padding: 15px;\n  border-radius: 8px;\n  margin-bottom: 20px;\n  border: 1px solid #f5c6cb;\n`;\n_c11 = ErrorMessage;\nconst LoadingSpinner = styled.div`\n  display: inline-block;\n  width: 20px;\n  height: 20px;\n  border: 3px solid rgba(255, 255, 255, 0.3);\n  border-radius: 50%;\n  border-top-color: white;\n  animation: spin 1s ease-in-out infinite;\n  margin-right: 8px;\n\n  @keyframes spin {\n    to { transform: rotate(360deg); }\n  }\n`;\n_c12 = LoadingSpinner;\nconst LoadingText = styled.span`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n_c13 = LoadingText;\nfunction LivePrediction({\n  onPrediction\n}) {\n  _s();\n  const [isActive, setIsActive] = useState(false);\n  const [error, setError] = useState(null);\n  const [predictions, setPredictions] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasPermission, setHasPermission] = useState(false);\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const streamRef = useRef(null);\n  const animationRef = useRef(null);\n  const predictionIntervalRef = useRef(null);\n  const startCamera = useCallback(async () => {\n    try {\n      setError(null);\n      setIsLoading(true);\n      console.log('Starting live prediction camera...');\n\n      // Check if getUserMedia is supported\n      if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {\n        setError('Camera access is not supported in this browser. Please use Chrome, Firefox, or Safari.');\n        setIsLoading(false);\n        return;\n      }\n\n      // Simple video constraints\n      const constraints = {\n        video: true,\n        audio: false\n      };\n      console.log('Requesting camera access for live prediction...');\n      const stream = await navigator.mediaDevices.getUserMedia(constraints);\n      console.log('Camera stream obtained for live prediction:', stream);\n      streamRef.current = stream;\n\n      // Set permission first so video element renders, then set stream\n      setHasPermission(true);\n      setIsLoading(false);\n      console.log('Camera stream obtained, setting permission to render video element');\n    } catch (err) {\n      console.error('Camera error:', err);\n      let errorMessage = 'Camera access denied. ';\n      if (err.name === 'NotAllowedError') {\n        errorMessage += 'Please allow camera permissions in your browser and refresh the page.';\n      } else if (err.name === 'NotFoundError') {\n        errorMessage += 'No camera found. Please connect a camera and try again.';\n      } else if (err.name === 'NotReadableError') {\n        errorMessage += 'Camera is already in use by another application.';\n      } else if (err.name === 'OverconstrainedError') {\n        errorMessage += 'Camera constraints cannot be satisfied.';\n      } else {\n        errorMessage += `Error: ${err.message}`;\n      }\n      setError(errorMessage);\n      setIsLoading(false);\n    }\n  }, []);\n  const stopCamera = useCallback(() => {\n    if (streamRef.current) {\n      streamRef.current.getTracks().forEach(track => track.stop());\n      streamRef.current = null;\n    }\n    if (videoRef.current) {\n      videoRef.current.srcObject = null;\n    }\n    setHasPermission(false);\n    setIsActive(false);\n\n    // Clear intervals\n    if (predictionIntervalRef.current) {\n      clearInterval(predictionIntervalRef.current);\n      predictionIntervalRef.current = null;\n    }\n    if (animationRef.current) {\n      cancelAnimationFrame(animationRef.current);\n      animationRef.current = null;\n    }\n  }, []);\n  const captureFrame = useCallback(() => {\n    if (!videoRef.current || !canvasRef.current) return null;\n    const video = videoRef.current;\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n\n    // Set canvas size to match video\n    canvas.width = video.videoWidth;\n    canvas.height = video.videoHeight;\n\n    // Draw current video frame to canvas\n    ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\n\n    // Convert canvas to blob\n    return new Promise(resolve => {\n      canvas.toBlob(blob => {\n        if (blob) {\n          const file = new File([blob], 'frame.jpg', {\n            type: 'image/jpeg'\n          });\n          resolve(file);\n        } else {\n          resolve(null);\n        }\n      }, 'image/jpeg', 0.8);\n    });\n  }, []);\n  const detectFaces = useCallback(async () => {\n    try {\n      if (!videoRef.current) return;\n\n      // Use MediaPipe Face Detection or a simpler approach\n      // For now, let's use a basic face detection approach\n      const video = videoRef.current;\n      const canvas = canvasRef.current;\n      if (!canvas) return;\n      const ctx = canvas.getContext('2d');\n      canvas.width = video.videoWidth;\n      canvas.height = video.videoHeight;\n\n      // Draw current frame\n      ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\n\n      // Get image data for face detection\n      const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n\n      // Simple face detection using a basic algorithm\n      // This is a placeholder - in a real app you'd use a proper face detection library\n      const faces = detectFacesInImage(imageData, canvas.width, canvas.height);\n      if (faces.length > 0) {\n        // For now, use mock predictions for detected faces\n        const predictions = faces.map((face, index) => ({\n          name: index === 0 ? 'Aaron' : `Person${index + 1}`,\n          confidence: 0.8 - index * 0.1,\n          boundingBox: face\n        }));\n        setPredictions(predictions);\n        if (onPrediction) {\n          onPrediction(predictions);\n        }\n      } else {\n        setPredictions([]);\n      }\n    } catch (error) {\n      console.error('Face detection error:', error);\n    }\n  }, [onPrediction]);\n\n  // Enhanced face detection function\n  const detectFacesInImage = useCallback((imageData, width, height) => {\n    const faces = [];\n\n    // Simple skin tone detection for face detection\n    // This is a basic approach - in production you'd use a proper ML model\n    const data = imageData.data;\n    const skinPixels = [];\n\n    // Scan for skin-colored pixels\n    for (let y = 0; y < height; y += 10) {\n      // Sample every 10th pixel for performance\n      for (let x = 0; x < width; x += 10) {\n        const index = (y * width + x) * 4;\n        const r = data[index];\n        const g = data[index + 1];\n        const b = data[index + 2];\n\n        // Simple skin tone detection (basic heuristic)\n        if (r > 95 && g > 40 && b > 20 && Math.max(r, g, b) - Math.min(r, g, b) > 15 && Math.abs(r - g) > 15 && r > g && r > b) {\n          skinPixels.push({\n            x,\n            y\n          });\n        }\n      }\n    }\n    if (skinPixels.length > 30) {\n      // If we found enough skin pixels\n      // Find the center of skin pixels\n      const centerX = skinPixels.reduce((sum, p) => sum + p.x, 0) / skinPixels.length;\n      const centerY = skinPixels.reduce((sum, p) => sum + p.y, 0) / skinPixels.length;\n\n      // Calculate tighter bounding box around the face\n      const minX = Math.min(...skinPixels.map(p => p.x));\n      const maxX = Math.max(...skinPixels.map(p => p.x));\n      const minY = Math.min(...skinPixels.map(p => p.y));\n      const maxY = Math.max(...skinPixels.map(p => p.y));\n\n      // Make the box more face-sized (faces are typically 1.2:1 ratio)\n      const rawWidth = maxX - minX;\n      const rawHeight = maxY - minY;\n\n      // Use the smaller dimension as base and make it square-ish for face\n      const baseSize = Math.min(rawWidth, rawHeight);\n      const faceWidth = baseSize * 1.1; // Slightly wider than square\n      const faceHeight = baseSize * 1.3; // Taller for face shape\n\n      // Center the face box on the detected skin area\n      const faceX = Math.max(0, centerX - faceWidth / 2);\n      const faceY = Math.max(0, centerY - faceHeight / 2);\n\n      // Ensure the box stays within video bounds\n      const finalWidth = Math.min(faceWidth, width - faceX);\n      const finalHeight = Math.min(faceHeight, height - faceY);\n      faces.push({\n        x: faceX,\n        y: faceY,\n        width: finalWidth,\n        height: finalHeight\n      });\n    }\n    return faces;\n  }, []);\n  const startPrediction = useCallback(() => {\n    if (!hasPermission) return;\n    setIsActive(true);\n\n    // Make face detection every 200ms for real-time tracking\n    predictionIntervalRef.current = setInterval(() => {\n      detectFaces();\n    }, 200);\n\n    // Make initial detection\n    detectFaces();\n  }, [hasPermission, detectFaces]);\n  const stopPrediction = useCallback(() => {\n    setIsActive(false);\n    if (predictionIntervalRef.current) {\n      clearInterval(predictionIntervalRef.current);\n      predictionIntervalRef.current = null;\n    }\n    setPredictions([]);\n  }, []);\n  const drawFaceBoxes = useCallback(() => {\n    if (!canvasRef.current || !videoRef.current || !isActive) return;\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const video = videoRef.current;\n\n    // Set canvas size to match video\n    canvas.width = video.videoWidth;\n    canvas.height = video.videoHeight;\n\n    // Clear canvas\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    // Draw face detection boxes for each detected face\n    predictions.forEach((prediction, index) => {\n      if (prediction.confidence > 0.5 && prediction.boundingBox) {\n        const {\n          x,\n          y,\n          width,\n          height\n        } = prediction.boundingBox;\n\n        // Draw face box\n        ctx.strokeStyle = '#00ff00';\n        ctx.lineWidth = 3;\n        ctx.strokeRect(x, y, width, height);\n\n        // Draw name label background\n        ctx.fillStyle = 'rgba(0, 255, 0, 0.8)';\n        ctx.fillRect(x, y - 30, Math.max(width, prediction.name.length * 12), 25);\n\n        // Draw name label\n        ctx.fillStyle = '#000';\n        ctx.font = '16px Arial';\n        ctx.fillText(`${prediction.name} (${(prediction.confidence * 100).toFixed(0)}%)`, x + 5, y - 10);\n      }\n    });\n    if (isActive) {\n      animationRef.current = requestAnimationFrame(drawFaceBoxes);\n    }\n  }, [isActive, predictions]);\n\n  // Set stream when video element is available\n  useEffect(() => {\n    if (videoRef.current && streamRef.current) {\n      console.log('Setting video stream in useEffect for live prediction');\n      videoRef.current.srcObject = streamRef.current;\n    }\n  }, [hasPermission]);\n\n  // Start drawing face boxes when active\n  useEffect(() => {\n    if (isActive) {\n      drawFaceBoxes();\n    } else {\n      if (animationRef.current) {\n        cancelAnimationFrame(animationRef.current);\n        animationRef.current = null;\n      }\n    }\n  }, [isActive, drawFaceBoxes]);\n\n  // Cleanup on unmount\n  useEffect(() => {\n    return () => {\n      stopCamera();\n    };\n  }, [stopCamera]);\n  return /*#__PURE__*/_jsxDEV(LiveContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\uD83C\\uDFAF Live Face Recognition\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 17\n    }, this), !hasPermission ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: startCamera,\n        disabled: isLoading,\n        style: {\n          background: '#667eea',\n          color: 'white',\n          marginBottom: '10px'\n        },\n        children: isLoading ? /*#__PURE__*/_jsxDEV(LoadingText, {\n          children: [/*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 476,\n            columnNumber: 17\n          }, this), \"Starting Camera...\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 15\n        }, this) : '📷 Start Camera'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: '12px',\n          color: '#666',\n          marginTop: '10px'\n        },\n        children: [\"Debug: \", isLoading ? 'Loading...' : 'Ready to start camera']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(VideoContainer, {\n        children: [/*#__PURE__*/_jsxDEV(Video, {\n          ref: videoRef,\n          autoPlay: true,\n          muted: true,\n          playsInline: true,\n          style: {\n            width: '100%',\n            height: 'auto'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Canvas, {\n          ref: canvasRef,\n          style: {\n            position: 'absolute',\n            top: 0,\n            left: 0\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Status, {\n        $isActive: isActive,\n        children: isActive ? '🔴 Live Recognition Active' : '📹 Camera Ready'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 503,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: '12px',\n          color: '#666',\n          marginBottom: '15px'\n        },\n        children: [\"Debug: Stream=\", streamRef.current ? '✅' : '❌', \" | Video=\", videoRef.current ? '✅' : '❌', \" | Permission=\", hasPermission ? '✅' : '❌']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Controls, {\n        children: [!isActive ? /*#__PURE__*/_jsxDEV(StartButton, {\n          onClick: startPrediction,\n          children: \"\\uD83C\\uDFAF Start Recognition\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(StartButton, {\n          onClick: stopPrediction,\n          $isActive: true,\n          children: \"\\u23F9\\uFE0F Stop Recognition\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 517,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: stopCamera,\n          style: {\n            background: '#6c757d',\n            color: 'white'\n          },\n          children: \"\\uD83D\\uDCF7 Stop Camera\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 522,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 11\n      }, this), predictions.length > 0 && /*#__PURE__*/_jsxDEV(PredictionDisplay, {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Current Predictions:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 532,\n          columnNumber: 15\n        }, this), predictions.map((pred, index) => /*#__PURE__*/_jsxDEV(PredictionItem, {\n          children: [/*#__PURE__*/_jsxDEV(PersonName, {\n            children: pred.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 535,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Confidence, {\n            children: [(pred.confidence * 100).toFixed(1), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 536,\n            columnNumber: 19\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 534,\n          columnNumber: 17\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 531,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 462,\n    columnNumber: 5\n  }, this);\n}\n_s(LivePrediction, \"OmBwMHEzpaDYBNKZRlALXspJGT0=\");\n_c14 = LivePrediction;\nexport default LivePrediction;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c0, _c1, _c10, _c11, _c12, _c13, _c14;\n$RefreshReg$(_c, \"LiveContainer\");\n$RefreshReg$(_c2, \"VideoContainer\");\n$RefreshReg$(_c3, \"Video\");\n$RefreshReg$(_c4, \"Canvas\");\n$RefreshReg$(_c5, \"Controls\");\n$RefreshReg$(_c6, \"Button\");\n$RefreshReg$(_c7, \"StartButton\");\n$RefreshReg$(_c8, \"Status\");\n$RefreshReg$(_c9, \"PredictionDisplay\");\n$RefreshReg$(_c0, \"PredictionItem\");\n$RefreshReg$(_c1, \"PersonName\");\n$RefreshReg$(_c10, \"Confidence\");\n$RefreshReg$(_c11, \"ErrorMessage\");\n$RefreshReg$(_c12, \"LoadingSpinner\");\n$RefreshReg$(_c13, \"LoadingText\");\n$RefreshReg$(_c14, \"LivePrediction\");","map":{"version":3,"names":["React","useState","useRef","useCallback","useEffect","styled","jsxDEV","_jsxDEV","Fragment","_Fragment","LiveContainer","div","_c","VideoContainer","_c2","Video","video","_c3","Canvas","canvas","_c4","Controls","_c5","Button","button","_c6","StartButton","props","$isActive","_c7","Status","_c8","PredictionDisplay","_c9","PredictionItem","_c0","PersonName","span","_c1","Confidence","_c10","ErrorMessage","_c11","LoadingSpinner","_c12","LoadingText","_c13","LivePrediction","onPrediction","_s","isActive","setIsActive","error","setError","predictions","setPredictions","isLoading","setIsLoading","hasPermission","setHasPermission","videoRef","canvasRef","streamRef","animationRef","predictionIntervalRef","startCamera","console","log","navigator","mediaDevices","getUserMedia","constraints","audio","stream","current","err","errorMessage","name","message","stopCamera","getTracks","forEach","track","stop","srcObject","clearInterval","cancelAnimationFrame","captureFrame","ctx","getContext","width","videoWidth","height","videoHeight","drawImage","Promise","resolve","toBlob","blob","file","File","type","detectFaces","imageData","getImageData","faces","detectFacesInImage","length","map","face","index","confidence","boundingBox","data","skinPixels","y","x","r","g","b","Math","max","min","abs","push","centerX","reduce","sum","p","centerY","minX","maxX","minY","maxY","rawWidth","rawHeight","baseSize","faceWidth","faceHeight","faceX","faceY","finalWidth","finalHeight","startPrediction","setInterval","stopPrediction","drawFaceBoxes","clearRect","prediction","strokeStyle","lineWidth","strokeRect","fillStyle","fillRect","font","fillText","toFixed","requestAnimationFrame","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","style","background","color","marginBottom","fontSize","marginTop","ref","autoPlay","muted","playsInline","position","top","left","pred","_c14","$RefreshReg$"],"sources":["/Users/aaronc/Desktop/VideoClassificationModel/src/frontend/src/components/LivePrediction.js"],"sourcesContent":["import React, { useState, useRef, useCallback, useEffect } from 'react';\nimport styled from 'styled-components';\n\nconst LiveContainer = styled.div`\n  background: #f8f9fa;\n  border-radius: 12px;\n  padding: 30px;\n  text-align: center;\n`;\n\nconst VideoContainer = styled.div`\n  position: relative;\n  max-width: 800px;\n  margin: 0 auto 20px;\n  border-radius: 12px;\n  overflow: hidden;\n  box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);\n  background: #000;\n`;\n\nconst Video = styled.video`\n  width: 100%;\n  height: auto;\n  display: block;\n`;\n\nconst Canvas = styled.canvas`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  pointer-events: none;\n`;\n\nconst Controls = styled.div`\n  display: flex;\n  gap: 15px;\n  justify-content: center;\n  flex-wrap: wrap;\n  margin-bottom: 20px;\n`;\n\nconst Button = styled.button`\n  padding: 12px 24px;\n  border: none;\n  border-radius: 8px;\n  font-size: 16px;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  min-width: 120px;\n\n  &:disabled {\n    opacity: 0.6;\n    cursor: not-allowed;\n  }\n`;\n\nconst StartButton = styled(Button)`\n  background: ${props => props.$isActive ? '#dc3545' : '#28a745'};\n  color: white;\n\n  &:hover:not(:disabled) {\n    transform: translateY(-2px);\n    box-shadow: 0 8px 20px rgba(0, 0, 0, 0.2);\n  }\n`;\n\nconst Status = styled.div`\n  font-size: 16px;\n  font-weight: 500;\n  color: ${props => props.$isActive ? '#dc3545' : '#28a745'};\n  margin-bottom: 15px;\n`;\n\nconst PredictionDisplay = styled.div`\n  background: white;\n  border-radius: 8px;\n  padding: 20px;\n  margin-top: 20px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n  text-align: left;\n`;\n\nconst PredictionItem = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 10px 0;\n  border-bottom: 1px solid #e9ecef;\n\n  &:last-child {\n    border-bottom: none;\n  }\n`;\n\nconst PersonName = styled.span`\n  font-weight: 600;\n  color: #333;\n  font-size: 18px;\n`;\n\nconst Confidence = styled.span`\n  color: #667eea;\n  font-weight: 600;\n`;\n\nconst ErrorMessage = styled.div`\n  background: #f8d7da;\n  color: #721c24;\n  padding: 15px;\n  border-radius: 8px;\n  margin-bottom: 20px;\n  border: 1px solid #f5c6cb;\n`;\n\nconst LoadingSpinner = styled.div`\n  display: inline-block;\n  width: 20px;\n  height: 20px;\n  border: 3px solid rgba(255, 255, 255, 0.3);\n  border-radius: 50%;\n  border-top-color: white;\n  animation: spin 1s ease-in-out infinite;\n  margin-right: 8px;\n\n  @keyframes spin {\n    to { transform: rotate(360deg); }\n  }\n`;\n\nconst LoadingText = styled.span`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nfunction LivePrediction({ onPrediction }) {\n  const [isActive, setIsActive] = useState(false);\n  const [error, setError] = useState(null);\n  const [predictions, setPredictions] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasPermission, setHasPermission] = useState(false);\n\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const streamRef = useRef(null);\n  const animationRef = useRef(null);\n  const predictionIntervalRef = useRef(null);\n\n  const startCamera = useCallback(async () => {\n    try {\n      setError(null);\n      setIsLoading(true);\n      \n      console.log('Starting live prediction camera...');\n      \n      // Check if getUserMedia is supported\n      if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {\n        setError('Camera access is not supported in this browser. Please use Chrome, Firefox, or Safari.');\n        setIsLoading(false);\n        return;\n      }\n      \n      // Simple video constraints\n      const constraints = {\n        video: true,\n        audio: false\n      };\n      \n      console.log('Requesting camera access for live prediction...');\n      const stream = await navigator.mediaDevices.getUserMedia(constraints);\n      \n      console.log('Camera stream obtained for live prediction:', stream);\n      streamRef.current = stream;\n      \n      // Set permission first so video element renders, then set stream\n      setHasPermission(true);\n      setIsLoading(false);\n      console.log('Camera stream obtained, setting permission to render video element');\n      \n    } catch (err) {\n      console.error('Camera error:', err);\n      \n      let errorMessage = 'Camera access denied. ';\n      \n      if (err.name === 'NotAllowedError') {\n        errorMessage += 'Please allow camera permissions in your browser and refresh the page.';\n      } else if (err.name === 'NotFoundError') {\n        errorMessage += 'No camera found. Please connect a camera and try again.';\n      } else if (err.name === 'NotReadableError') {\n        errorMessage += 'Camera is already in use by another application.';\n      } else if (err.name === 'OverconstrainedError') {\n        errorMessage += 'Camera constraints cannot be satisfied.';\n      } else {\n        errorMessage += `Error: ${err.message}`;\n      }\n      \n      setError(errorMessage);\n      setIsLoading(false);\n    }\n  }, []);\n\n  const stopCamera = useCallback(() => {\n    if (streamRef.current) {\n      streamRef.current.getTracks().forEach(track => track.stop());\n      streamRef.current = null;\n    }\n    if (videoRef.current) {\n      videoRef.current.srcObject = null;\n    }\n    setHasPermission(false);\n    setIsActive(false);\n    \n    // Clear intervals\n    if (predictionIntervalRef.current) {\n      clearInterval(predictionIntervalRef.current);\n      predictionIntervalRef.current = null;\n    }\n    if (animationRef.current) {\n      cancelAnimationFrame(animationRef.current);\n      animationRef.current = null;\n    }\n  }, []);\n\n  const captureFrame = useCallback(() => {\n    if (!videoRef.current || !canvasRef.current) return null;\n    \n    const video = videoRef.current;\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    \n    // Set canvas size to match video\n    canvas.width = video.videoWidth;\n    canvas.height = video.videoHeight;\n    \n    // Draw current video frame to canvas\n    ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\n    \n    // Convert canvas to blob\n    return new Promise((resolve) => {\n      canvas.toBlob((blob) => {\n        if (blob) {\n          const file = new File([blob], 'frame.jpg', { type: 'image/jpeg' });\n          resolve(file);\n        } else {\n          resolve(null);\n        }\n      }, 'image/jpeg', 0.8);\n    });\n  }, []);\n\n  const detectFaces = useCallback(async () => {\n    try {\n      if (!videoRef.current) return;\n\n      // Use MediaPipe Face Detection or a simpler approach\n      // For now, let's use a basic face detection approach\n      const video = videoRef.current;\n      const canvas = canvasRef.current;\n      \n      if (!canvas) return;\n\n      const ctx = canvas.getContext('2d');\n      canvas.width = video.videoWidth;\n      canvas.height = video.videoHeight;\n      \n      // Draw current frame\n      ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\n      \n      // Get image data for face detection\n      const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n      \n      // Simple face detection using a basic algorithm\n      // This is a placeholder - in a real app you'd use a proper face detection library\n      const faces = detectFacesInImage(imageData, canvas.width, canvas.height);\n      \n      if (faces.length > 0) {\n        // For now, use mock predictions for detected faces\n        const predictions = faces.map((face, index) => ({\n          name: index === 0 ? 'Aaron' : `Person${index + 1}`,\n          confidence: 0.8 - (index * 0.1),\n          boundingBox: face\n        }));\n        \n        setPredictions(predictions);\n        \n        if (onPrediction) {\n          onPrediction(predictions);\n        }\n      } else {\n        setPredictions([]);\n      }\n    } catch (error) {\n      console.error('Face detection error:', error);\n    }\n  }, [onPrediction]);\n\n  // Enhanced face detection function\n  const detectFacesInImage = useCallback((imageData, width, height) => {\n    const faces = [];\n    \n    // Simple skin tone detection for face detection\n    // This is a basic approach - in production you'd use a proper ML model\n    const data = imageData.data;\n    const skinPixels = [];\n    \n    // Scan for skin-colored pixels\n    for (let y = 0; y < height; y += 10) { // Sample every 10th pixel for performance\n      for (let x = 0; x < width; x += 10) {\n        const index = (y * width + x) * 4;\n        const r = data[index];\n        const g = data[index + 1];\n        const b = data[index + 2];\n        \n        // Simple skin tone detection (basic heuristic)\n        if (r > 95 && g > 40 && b > 20 && \n            Math.max(r, g, b) - Math.min(r, g, b) > 15 &&\n            Math.abs(r - g) > 15 && r > g && r > b) {\n          skinPixels.push({ x, y });\n        }\n      }\n    }\n    \n    if (skinPixels.length > 30) { // If we found enough skin pixels\n      // Find the center of skin pixels\n      const centerX = skinPixels.reduce((sum, p) => sum + p.x, 0) / skinPixels.length;\n      const centerY = skinPixels.reduce((sum, p) => sum + p.y, 0) / skinPixels.length;\n      \n      // Calculate tighter bounding box around the face\n      const minX = Math.min(...skinPixels.map(p => p.x));\n      const maxX = Math.max(...skinPixels.map(p => p.x));\n      const minY = Math.min(...skinPixels.map(p => p.y));\n      const maxY = Math.max(...skinPixels.map(p => p.y));\n      \n      // Make the box more face-sized (faces are typically 1.2:1 ratio)\n      const rawWidth = maxX - minX;\n      const rawHeight = maxY - minY;\n      \n      // Use the smaller dimension as base and make it square-ish for face\n      const baseSize = Math.min(rawWidth, rawHeight);\n      const faceWidth = baseSize * 1.1; // Slightly wider than square\n      const faceHeight = baseSize * 1.3; // Taller for face shape\n      \n      // Center the face box on the detected skin area\n      const faceX = Math.max(0, centerX - faceWidth / 2);\n      const faceY = Math.max(0, centerY - faceHeight / 2);\n      \n      // Ensure the box stays within video bounds\n      const finalWidth = Math.min(faceWidth, width - faceX);\n      const finalHeight = Math.min(faceHeight, height - faceY);\n      \n      faces.push({\n        x: faceX,\n        y: faceY,\n        width: finalWidth,\n        height: finalHeight\n      });\n    }\n    \n    return faces;\n  }, []);\n\n  const startPrediction = useCallback(() => {\n    if (!hasPermission) return;\n    \n    setIsActive(true);\n    \n    // Make face detection every 200ms for real-time tracking\n    predictionIntervalRef.current = setInterval(() => {\n      detectFaces();\n    }, 200);\n    \n    // Make initial detection\n    detectFaces();\n  }, [hasPermission, detectFaces]);\n\n  const stopPrediction = useCallback(() => {\n    setIsActive(false);\n    \n    if (predictionIntervalRef.current) {\n      clearInterval(predictionIntervalRef.current);\n      predictionIntervalRef.current = null;\n    }\n    \n    setPredictions([]);\n  }, []);\n\n  const drawFaceBoxes = useCallback(() => {\n    if (!canvasRef.current || !videoRef.current || !isActive) return;\n    \n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const video = videoRef.current;\n    \n    // Set canvas size to match video\n    canvas.width = video.videoWidth;\n    canvas.height = video.videoHeight;\n    \n    // Clear canvas\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    \n    // Draw face detection boxes for each detected face\n    predictions.forEach((prediction, index) => {\n      if (prediction.confidence > 0.5 && prediction.boundingBox) {\n        const { x, y, width, height } = prediction.boundingBox;\n        \n        // Draw face box\n        ctx.strokeStyle = '#00ff00';\n        ctx.lineWidth = 3;\n        ctx.strokeRect(x, y, width, height);\n        \n        // Draw name label background\n        ctx.fillStyle = 'rgba(0, 255, 0, 0.8)';\n        ctx.fillRect(x, y - 30, Math.max(width, prediction.name.length * 12), 25);\n        \n        // Draw name label\n        ctx.fillStyle = '#000';\n        ctx.font = '16px Arial';\n        ctx.fillText(\n          `${prediction.name} (${(prediction.confidence * 100).toFixed(0)}%)`,\n          x + 5,\n          y - 10\n        );\n      }\n    });\n    \n    if (isActive) {\n      animationRef.current = requestAnimationFrame(drawFaceBoxes);\n    }\n  }, [isActive, predictions]);\n\n  // Set stream when video element is available\n  useEffect(() => {\n    if (videoRef.current && streamRef.current) {\n      console.log('Setting video stream in useEffect for live prediction');\n      videoRef.current.srcObject = streamRef.current;\n    }\n  }, [hasPermission]);\n\n  // Start drawing face boxes when active\n  useEffect(() => {\n    if (isActive) {\n      drawFaceBoxes();\n    } else {\n      if (animationRef.current) {\n        cancelAnimationFrame(animationRef.current);\n        animationRef.current = null;\n      }\n    }\n  }, [isActive, drawFaceBoxes]);\n\n  // Cleanup on unmount\n  useEffect(() => {\n    return () => {\n      stopCamera();\n    };\n  }, [stopCamera]);\n\n  return (\n    <LiveContainer>\n      <h3>🎯 Live Face Recognition</h3>\n      \n      {error && <ErrorMessage>{error}</ErrorMessage>}\n\n      {!hasPermission ? (\n        <div>\n          <Button \n            onClick={startCamera} \n            disabled={isLoading}\n            style={{ background: '#667eea', color: 'white', marginBottom: '10px' }}\n          >\n            {isLoading ? (\n              <LoadingText>\n                <LoadingSpinner />\n                Starting Camera...\n              </LoadingText>\n            ) : (\n              '📷 Start Camera'\n            )}\n          </Button>\n          <div style={{ fontSize: '12px', color: '#666', marginTop: '10px' }}>\n            Debug: {isLoading ? 'Loading...' : 'Ready to start camera'}\n          </div>\n        </div>\n      ) : (\n        <>\n          <VideoContainer>\n            <Video\n              ref={videoRef}\n              autoPlay\n              muted\n              playsInline\n              style={{ width: '100%', height: 'auto' }}\n            />\n            <Canvas\n              ref={canvasRef}\n              style={{ position: 'absolute', top: 0, left: 0 }}\n            />\n          </VideoContainer>\n\n          <Status $isActive={isActive}>\n            {isActive ? '🔴 Live Recognition Active' : '📹 Camera Ready'}\n          </Status>\n          \n          <div style={{ fontSize: '12px', color: '#666', marginBottom: '15px' }}>\n            Debug: Stream={streamRef.current ? '✅' : '❌'} | Video={videoRef.current ? '✅' : '❌'} | Permission={hasPermission ? '✅' : '❌'}\n          </div>\n\n          <Controls>\n            {!isActive ? (\n              <StartButton onClick={startPrediction}>\n                🎯 Start Recognition\n              </StartButton>\n            ) : (\n              <StartButton onClick={stopPrediction} $isActive>\n                ⏹️ Stop Recognition\n              </StartButton>\n            )}\n\n            <Button\n              onClick={stopCamera}\n              style={{ background: '#6c757d', color: 'white' }}\n            >\n              📷 Stop Camera\n            </Button>\n          </Controls>\n\n          {predictions.length > 0 && (\n            <PredictionDisplay>\n              <h4>Current Predictions:</h4>\n              {predictions.map((pred, index) => (\n                <PredictionItem key={index}>\n                  <PersonName>{pred.name}</PersonName>\n                  <Confidence>{(pred.confidence * 100).toFixed(1)}%</Confidence>\n                </PredictionItem>\n              ))}\n            </PredictionDisplay>\n          )}\n        </>\n      )}\n    </LiveContainer>\n  );\n}\n\nexport default LivePrediction;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}