{"ast":null,"code":"var _jsxFileName = \"/Users/aaronc/Desktop/VideoClassificationModel/src/frontend/src/components/VideoUploader.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadContainer = styled.div`\n  border: 2px dashed ${props => props.$isDragActive ? '#667eea' : '#ddd'};\n  border-radius: 12px;\n  padding: 40px;\n  text-align: center;\n  background: ${props => props.$isDragActive ? '#f8f9ff' : '#fafafa'};\n  transition: all 0.3s ease;\n  cursor: pointer;\n\n  &:hover {\n    border-color: #667eea;\n    background: #f8f9ff;\n  }\n`;\n_c = UploadContainer;\nconst UploadIcon = styled.div`\n  font-size: 48px;\n  margin-bottom: 20px;\n  color: #667eea;\n`;\n_c2 = UploadIcon;\nconst UploadText = styled.div`\n  font-size: 18px;\n  color: #333;\n  margin-bottom: 10px;\n  font-weight: 500;\n`;\n_c3 = UploadText;\nconst UploadSubtext = styled.div`\n  font-size: 14px;\n  color: #666;\n  margin-bottom: 20px;\n`;\n_c4 = UploadSubtext;\nconst FileInfo = styled.div`\n  background: #e8f2ff;\n  border: 1px solid #b3d9ff;\n  border-radius: 8px;\n  padding: 15px;\n  margin-top: 20px;\n  text-align: left;\n`;\n_c5 = FileInfo;\nconst FileName = styled.div`\n  font-weight: 600;\n  color: #333;\n  margin-bottom: 5px;\n`;\n_c6 = FileName;\nconst FileSize = styled.div`\n  font-size: 12px;\n  color: #666;\n`;\n_c7 = FileSize;\nconst SupportedFormats = styled.div`\n  font-size: 12px;\n  color: #888;\n  margin-top: 10px;\n`;\n_c8 = SupportedFormats;\nfunction VideoUploader({\n  onFileSelect,\n  selectedFile\n}) {\n  _s();\n  const onDrop = useCallback(acceptedFiles => {\n    if (acceptedFiles.length > 0) {\n      onFileSelect(acceptedFiles[0]);\n    }\n  }, [onFileSelect]);\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    onDrop,\n    accept: {\n      'video/*': ['.mp4', '.avi', '.mov', '.mkv', '.wmv', '.flv']\n    },\n    multiple: false,\n    maxSize: 100 * 1024 * 1024 // 100MB limit\n  });\n  const formatFileSize = bytes => {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(UploadContainer, {\n      ...getRootProps(),\n      $isDragActive: isDragActive,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ...getInputProps()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(UploadIcon, {\n        children: \"\\uD83D\\uDCF9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(UploadText, {\n        children: isDragActive ? 'Drop the video here...' : 'Drag & drop a video file here'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(UploadSubtext, {\n        children: \"or click to select a file\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SupportedFormats, {\n        children: \"Supported formats: MP4, AVI, MOV, MKV, WMV, FLV (max 100MB)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), selectedFile && /*#__PURE__*/_jsxDEV(FileInfo, {\n      children: [/*#__PURE__*/_jsxDEV(FileName, {\n        children: [\"\\uD83D\\uDCC1 \", selectedFile.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FileSize, {\n        children: [\"Size: \", formatFileSize(selectedFile.size)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n_s(VideoUploader, \"yd//yJtVY5DqPYzQY0xGsdgoRlk=\", false, function () {\n  return [useDropzone];\n});\n_c9 = VideoUploader;\nexport default VideoUploader;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n$RefreshReg$(_c, \"UploadContainer\");\n$RefreshReg$(_c2, \"UploadIcon\");\n$RefreshReg$(_c3, \"UploadText\");\n$RefreshReg$(_c4, \"UploadSubtext\");\n$RefreshReg$(_c5, \"FileInfo\");\n$RefreshReg$(_c6, \"FileName\");\n$RefreshReg$(_c7, \"FileSize\");\n$RefreshReg$(_c8, \"SupportedFormats\");\n$RefreshReg$(_c9, \"VideoUploader\");","map":{"version":3,"names":["React","useCallback","useDropzone","styled","jsxDEV","_jsxDEV","UploadContainer","div","props","$isDragActive","_c","UploadIcon","_c2","UploadText","_c3","UploadSubtext","_c4","FileInfo","_c5","FileName","_c6","FileSize","_c7","SupportedFormats","_c8","VideoUploader","onFileSelect","selectedFile","_s","onDrop","acceptedFiles","length","getRootProps","getInputProps","isDragActive","accept","multiple","maxSize","formatFileSize","bytes","k","sizes","i","Math","floor","log","parseFloat","pow","toFixed","children","fileName","_jsxFileName","lineNumber","columnNumber","name","size","_c9","$RefreshReg$"],"sources":["/Users/aaronc/Desktop/VideoClassificationModel/src/frontend/src/components/VideoUploader.js"],"sourcesContent":["import React, { useCallback } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport styled from 'styled-components';\n\nconst UploadContainer = styled.div`\n  border: 2px dashed ${props => props.$isDragActive ? '#667eea' : '#ddd'};\n  border-radius: 12px;\n  padding: 40px;\n  text-align: center;\n  background: ${props => props.$isDragActive ? '#f8f9ff' : '#fafafa'};\n  transition: all 0.3s ease;\n  cursor: pointer;\n\n  &:hover {\n    border-color: #667eea;\n    background: #f8f9ff;\n  }\n`;\n\nconst UploadIcon = styled.div`\n  font-size: 48px;\n  margin-bottom: 20px;\n  color: #667eea;\n`;\n\nconst UploadText = styled.div`\n  font-size: 18px;\n  color: #333;\n  margin-bottom: 10px;\n  font-weight: 500;\n`;\n\nconst UploadSubtext = styled.div`\n  font-size: 14px;\n  color: #666;\n  margin-bottom: 20px;\n`;\n\nconst FileInfo = styled.div`\n  background: #e8f2ff;\n  border: 1px solid #b3d9ff;\n  border-radius: 8px;\n  padding: 15px;\n  margin-top: 20px;\n  text-align: left;\n`;\n\nconst FileName = styled.div`\n  font-weight: 600;\n  color: #333;\n  margin-bottom: 5px;\n`;\n\nconst FileSize = styled.div`\n  font-size: 12px;\n  color: #666;\n`;\n\nconst SupportedFormats = styled.div`\n  font-size: 12px;\n  color: #888;\n  margin-top: 10px;\n`;\n\nfunction VideoUploader({ onFileSelect, selectedFile }) {\n  const onDrop = useCallback((acceptedFiles) => {\n    if (acceptedFiles.length > 0) {\n      onFileSelect(acceptedFiles[0]);\n    }\n  }, [onFileSelect]);\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    onDrop,\n    accept: {\n      'video/*': ['.mp4', '.avi', '.mov', '.mkv', '.wmv', '.flv']\n    },\n    multiple: false,\n    maxSize: 100 * 1024 * 1024 // 100MB limit\n  });\n\n  const formatFileSize = (bytes) => {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  };\n\n  return (\n    <div>\n      <UploadContainer {...getRootProps()} $isDragActive={isDragActive}>\n        <input {...getInputProps()} />\n        <UploadIcon>üìπ</UploadIcon>\n        <UploadText>\n          {isDragActive ? 'Drop the video here...' : 'Drag & drop a video file here'}\n        </UploadText>\n        <UploadSubtext>or click to select a file</UploadSubtext>\n        <SupportedFormats>\n          Supported formats: MP4, AVI, MOV, MKV, WMV, FLV (max 100MB)\n        </SupportedFormats>\n      </UploadContainer>\n\n      {selectedFile && (\n        <FileInfo>\n          <FileName>üìÅ {selectedFile.name}</FileName>\n          <FileSize>Size: {formatFileSize(selectedFile.size)}</FileSize>\n        </FileInfo>\n      )}\n    </div>\n  );\n}\n\nexport default VideoUploader;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}